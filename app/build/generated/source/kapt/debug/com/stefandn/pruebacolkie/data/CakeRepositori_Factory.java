// Generated by Dagger (https://dagger.dev).
package com.stefandn.pruebacolkie.data;

import com.stefandn.pruebacolkie.data.network.CakeService;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class CakeRepositori_Factory implements Factory<CakeRepositori> {
  private final Provider<CakeService> apiProvider;

  private final Provider<CakeProvider> cakesProvider;

  public CakeRepositori_Factory(Provider<CakeService> apiProvider,
      Provider<CakeProvider> cakesProvider) {
    this.apiProvider = apiProvider;
    this.cakesProvider = cakesProvider;
  }

  @Override
  public CakeRepositori get() {
    return newInstance(apiProvider.get(), cakesProvider.get());
  }

  public static CakeRepositori_Factory create(Provider<CakeService> apiProvider,
      Provider<CakeProvider> cakesProvider) {
    return new CakeRepositori_Factory(apiProvider, cakesProvider);
  }

  public static CakeRepositori newInstance(CakeService api, CakeProvider cakesProvider) {
    return new CakeRepositori(api, cakesProvider);
  }
}
