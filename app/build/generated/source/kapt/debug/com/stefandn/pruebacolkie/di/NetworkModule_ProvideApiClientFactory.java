// Generated by Dagger (https://dagger.dev).
package com.stefandn.pruebacolkie.di;

import com.stefandn.pruebacolkie.data.network.CakeApiClient;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;
import retrofit2.Retrofit;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class NetworkModule_ProvideApiClientFactory implements Factory<CakeApiClient> {
  private final Provider<Retrofit> retrofitProvider;

  public NetworkModule_ProvideApiClientFactory(Provider<Retrofit> retrofitProvider) {
    this.retrofitProvider = retrofitProvider;
  }

  @Override
  public CakeApiClient get() {
    return provideApiClient(retrofitProvider.get());
  }

  public static NetworkModule_ProvideApiClientFactory create(Provider<Retrofit> retrofitProvider) {
    return new NetworkModule_ProvideApiClientFactory(retrofitProvider);
  }

  public static CakeApiClient provideApiClient(Retrofit retrofit) {
    return Preconditions.checkNotNullFromProvides(NetworkModule.INSTANCE.provideApiClient(retrofit));
  }
}
