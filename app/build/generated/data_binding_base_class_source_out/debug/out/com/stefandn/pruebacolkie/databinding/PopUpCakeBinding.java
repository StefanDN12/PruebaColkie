// Generated by view binder compiler. Do not edit!
package com.stefandn.pruebacolkie.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.stefandn.pruebacolkie.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class PopUpCakeBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button buttonPopup;

  @NonNull
  public final LinearLayout linearLayout;

  @NonNull
  public final TextView textView;

  private PopUpCakeBinding(@NonNull LinearLayout rootView, @NonNull Button buttonPopup,
      @NonNull LinearLayout linearLayout, @NonNull TextView textView) {
    this.rootView = rootView;
    this.buttonPopup = buttonPopup;
    this.linearLayout = linearLayout;
    this.textView = textView;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static PopUpCakeBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static PopUpCakeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.pop_up_cake, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static PopUpCakeBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.button_popup;
      Button buttonPopup = ViewBindings.findChildViewById(rootView, id);
      if (buttonPopup == null) {
        break missingId;
      }

      LinearLayout linearLayout = (LinearLayout) rootView;

      id = R.id.text_view;
      TextView textView = ViewBindings.findChildViewById(rootView, id);
      if (textView == null) {
        break missingId;
      }

      return new PopUpCakeBinding((LinearLayout) rootView, buttonPopup, linearLayout, textView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
